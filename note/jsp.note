JSP -- Java Server Pages
	jsp 输出当前系统时间
		{
			<%
				Date date = new Date();
				out.write(date.toLocalString());
			%>
		}
	jsp 调用和运行原理
		HttpJspBase的子类, HttpJspBase 继承自HttpServlet
		可以直接使用request response等
	
	JSP模板元素
		jsp页面中的html
	脚本表达式
		<%=name %>
	脚本片段 <%%> 可以不完整，整体必须完整
	注释 
		<%-- --%>
	
	JSP指令
		语法： <%@ 指令 属性名＝"值" %>
		page指令
			<%@ page
				[language="java"]
				[extends="packgae.class"]
				[import=""]
				[session="true/false"]
				[isThreadSafe="true"]		// 是否线程安全
				[errorPage="/*.jsp"]	// 出错的页面
				[isErrorPage="true"]
			%>
		include指令
			<%@include file="/*.jsp" %>
			包含的页面不需要head body等标签
			静态包含，转成一个servlet
			request.getRequestDispatcher("").inclde(request, response);	// 动态包含
			静态包含性能好，尽量使用静态包含
		taglib指令

	jsp 运行原理
		第一次访问时需要转成servlet 所以速度比较慢
	
	九大隐式对象
		request response session application config page out exception pageContext

		out对象 JspWrite类
			<%
				out.write("hahaha");
				response.getWriter().write("wowowowo");
			%>
			结果： wowowowohahaha
		pageContext对象
			jsp中最重要的对象，可以获取其他隐式对象
			自定义标签的时候，需要用到
			pageContext.findAttribute("data"); // 按page request session applation中查找值
	
	JSP标签
		<jsp:forward page="*.*"></jsp:forward>
		<jsp:include page="*.*"></jsp:include> <%-- 动态包含 --%>
		<jsp:param name="" value=""></jsp:param>
	
	jsp 映射
		<servlet>
			<servlet-name></servlet-name>
			<jsp-file></jsp-file>
		</servlet>
	JSP中的错误
		1. 如果jsp语法错误导致没法生成servlet，错误讲显示jsp出错的行列位置
		2. jsp页面中jsp语法没问题，但是翻译成的servlet源文件中出现了java语法问题，导致jsp翻译成的servlet文件不能通过编译，提示jsp页面的行列
		3. 翻译成servlet后在运行时候出现异常，提示错误信息在servlet源文件的位置
