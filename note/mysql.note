(SQL)structured query language

创建数据库
	CREATE DATABASE [IF NOT EXISTS] db_name
		[create_specification , ...]

		[DEFAULT] CHARACTER SET charset_name
		[DEFAULT] COLLATE collation_name

	CHARACTER set 字符集	COLLATE 排序方式

查看数据库定义信息
	show create database db_name;

删除数据库
	drop database db_name;

备份数据库
	mysqldump -u 用户名 -p 数据名 > 文件名.sql (window 命令)

恢复数据库
	source 文件名.sql
	只能恢复数据，没法恢复库

创建表
	CREATE TABLE table_name (
		field1 datatype,
		field2 datatype,
		field3 datatype,
	) character set 字符集 collate 校对规则

	数据类型：
		数值类型：
			bit 最大为64位 8个字节 默认为1位（0/1）
			tinyint [unsigned|zerofill]	-128 ~ 127 1个字节
			bool, boolean  0或1
			smallint[unsigned|zerofill] 2的16次方 相当于short
			int [unsigned|zerofill] 2的32次方
			bigint	2的64次方
			float(m,d) m指显示长度，d制定小数位数
			double(m,d) 
			decimal(m,d) 定点数，存储货币等精度要求高的数据
		文本、二进制类型：
			char(size)  如char(20) 定长字符串 size最大为255
			varchar(size) 如varchar(20)	变长字符串 size最大为65535
			blob longblob	二进制数据
			text(clob) longtext(longclob) 大文本
		时间日期类型：
			date 日期 YYYY-mm-DD
			datetime YYYY-mm-DD HH:MM:ss
			timestamp 时间戳

查看数据库所有表：
	show tables;
	show create table table_name;
	desc table_name;
修改表结构
	追加列
		ALTER TABLE table add (column datatype [DEFAULT expr] [, column datatype]..);
	修改列
		ALTER TABLE table modify (column datatype [DEFAULT expr] [, column datatype]..);
	删除列
		ALTER TABLE table drop (column);
	修改表的名称
		rename table 表名 to 新表名;
	修改表的字符集
		alter table 表名 character set utf8;
	修改列名
		alter table 表名 change column 列名 新列名 varchar(20);
删除表
	drop table 表名;

insert语句
	INSERT INTO table [(column [, column...])] values (value [,value ]);
	注意 字符串和数字必需用单引号包围
	设置终端的字符编码
		show variables like 'chara%';
		set character_set_client=utf8;
		set character_set_results=utf8;
	修改配置文件设置字符编码
		mysql.ini 文件中 修改客户端编码

update语句
	update 表名 set col_name1=expr1 [, col_name2=expr2...] [where ..];
delete语句
	delete from 表名 [where ....];

select 语句
	select [DISTINCT] * | {column1, column2, column3...}  from table;
	可以用as 起别名
	比较运算符
		> >= < <= = <>
		beween ... and ...
		in ()
		is null
		like
	逻辑运算符 and or not

	排序
		order by column asc|desc
	sum 只对数值有效
	avg 平均
	合计函数 max min
	group by 分组
	having 过滤 通常跟在group by之后
	where 子句后边不能跟 sum合计函数

定义表的约束
	主键约束 primary key
	定义主键自动增长	auto_increment
	唯一约束	unique
	非空约束	not null
	定义外键约束 constraint 名称 foreign key(当前表中的列名) references 外表(外表列名)

数据库表的设计
	一对多的关系，在多的一方表中定义外键
	多对多关系
		create table teacher(
			id int primary key,
			name varchar(40),
			salary decimal(8,2)
		);
		create table student(
			id int primary key,
			name varchar(40)
		);
		create table tesher_student(
			theacher_id int,
			student_id int,
			primary key(teacher_id, student_id),
			cconstraint teacher_id_FK foreign key(teacher_id) references teacher(id).
			cconstraint student_id_FK foreign key(student_id) references student(id)
		);
	一对一关系
		主表 和从表
		从表纪录主表的主键， 外键约束、唯一约束、非空约束
		或 从表的主键同时是外键

JDBC Java Data Bse Connectivity
	包： java.sql javax.sql 相应的数据库驱动包

	代码：
		String url = "jdbc:mysql://localhost:3306/webtest";
		String username = "root";
		String password = "root";
		// 1. 加载驱动
		DriverManager.registerDriver(new com.mysql.jdbc.Driver());

		// 2. 获取数据库连接
		Connection conn = DriverManager.getConnection(url, username, password);

		// 3. 获取向数据库发sql语句的statament对象
		Statement st = conn.createStatement();

		// 4. 向数据库发送sql 获取数据库返回结果
		ResultSet rs = st.executQuery("select * from users");

		// 5. 从结果集中获取数据
		while(rs.next()) {
			rs.getInt(id);
			rs.getString("name");
			rs.getString("password");
			rs.getString("email");
			rs.getString("brithday");
		}

		// 6. 释放连接
		rs.close();
		st.close();
		conn.close();
